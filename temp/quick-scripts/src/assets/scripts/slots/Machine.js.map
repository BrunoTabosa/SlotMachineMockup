{"version":3,"sources":["assets\\scripts\\slots\\Machine.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,wCAA8B;AAExB,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAqC,2BAAY;IAAjD;QAAA,qEAgGC;QA9FQ,YAAM,GAAY,IAAI,CAAC;QAGvB,iBAAW,GAAG,IAAI,CAAC;QAiBnB,oBAAc,GAAG,CAAC,CAAC;QAelB,WAAK,GAAG,EAAE,CAAC;QAEZ,cAAQ,GAAG,KAAK,CAAC;;IAyD1B,CAAC;IAxFC,sBAAI,+BAAU;aAAd;YACE,OAAO,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;aAED,UAAe,SAAoB;YACjC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAC7B,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAE9B,IAAI,SAAS,KAAK,IAAI,EAAE;gBACtB,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;QACH,CAAC;;;OATA;IAeD,sBAAI,kCAAa;aAAjB;YACE,OAAO,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;aAED,UAAkB,SAAiB;YACjC,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;YAEhC,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,EAAE;gBAC5B,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;QACH,CAAC;;;OARA;IAcD,+BAAa,GAAb;QACE,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAI,OAAgB,CAAC;QACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,EAAE;YAC9C,OAAO,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC1C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC5B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;YAExB,IAAM,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAChD,UAAU,CAAC,UAAU,EAAE,CAAC;YACxB,UAAU,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;SAC/D;QAED,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,eAAe,EAAE,CAAC;IACtD,CAAC;IAED,sBAAI,GAAJ;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;QAE3E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,EAAE;YAC9C,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACnD,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,GAAG,CAAC,EAAE;gBACT,OAAO,CAAC,aAAa,GAAG,kBAAG,CAAC,SAAS,CAAC,IAAI,CAAC;aAC5C;iBAAM;gBACL,OAAO,CAAC,aAAa,GAAG,kBAAG,CAAC,SAAS,CAAC,EAAE,CAAC;aAC1C;YACD,iDAAiD;YACjD,OAAO,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,sBAAI,GAAJ;QACE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,YAAY,GAAG,KAAK,CAAC;IAC3D,CAAC;IAED,sBAAI,GAAJ,UAAK,MAAmC,EAAE,aAAa;QAAvD,iBAeC;QAfI,uBAAA,EAAA,aAAmC;QACtC,UAAU,CAAC;YACT,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,KAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;YACxD,KAAI,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;QAC7E,CAAC,EAAE,IAAI,CAAC,CAAC;QAET,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;gCACxB,CAAC;YACR,IAAM,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACpE,IAAM,OAAO,GAAG,OAAK,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACnD,UAAU,CAAC;gBACT,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;YAC9C,CAAC,EAAE,SAAS,GAAG,IAAI,CAAC,CAAC;;;QALvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC;oBAArC,CAAC;SAMT;IACH,CAAC;IA7FD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;2CACY;IAG9B;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;gDACM;IAG1B;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,MAAM,EAAE,CAAC;6CAG7B;IAYD;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,OAAO,EAAE,CAAC;mDACL;IAG1B;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;gDAG1D;IA3BkB,OAAO;QAD3B,OAAO;OACa,OAAO,CAgG3B;IAAD,cAAC;CAhGD,AAgGC,CAhGoC,EAAE,CAAC,SAAS,GAgGhD;kBAhGoB,OAAO","file":"","sourceRoot":"/","sourcesContent":["import Aux from '../SlotEnum';\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Machine extends cc.Component {\n  @property(cc.Node)\n  public button: cc.Node = null;\n\n  @property(cc.Prefab)\n  public _reelPrefab = null;\n\n  @property({ type: cc.Prefab })\n  get reelPrefab(): cc.Prefab {\n    return this._reelPrefab;\n  }\n\n  set reelPrefab(newPrefab: cc.Prefab) {\n    this._reelPrefab = newPrefab;\n    this.node.removeAllChildren();\n\n    if (newPrefab !== null) {\n      this.createMachine();\n    }\n  }\n\n  @property({ type: cc.Integer })\n  public _numberOfReels = 3;\n\n  @property({ type: cc.Integer, range: [3, 6], slide: true })\n  get numberOfReels(): number {\n    return this._numberOfReels;\n  }\n\n  set numberOfReels(newNumber: number) {\n    this._numberOfReels = newNumber;\n\n    if (this.reelPrefab !== null) {\n      this.createMachine();\n    }\n  }\n\n  private reels = [];\n\n  public spinning = false;\n\n  createMachine(): void {\n    this.node.destroyAllChildren();\n    this.reels = [];\n\n    let newReel: cc.Node;\n    for (let i = 0; i < this.numberOfReels; i += 1) {\n      newReel = cc.instantiate(this.reelPrefab);\n      this.node.addChild(newReel);\n      this.reels[i] = newReel;\n\n      const reelScript = newReel.getComponent('Reel');\n      reelScript.createReel();\n      reelScript.reelAnchor.getComponent(cc.Layout).enabled = false;\n    }\n\n    this.node.getComponent(cc.Widget).updateAlignment();\n  }\n\n  spin(): void {\n    this.spinning = true;\n    this.button.getChildByName('Label').getComponent(cc.Label).string = 'STOP';\n\n    for (let i = 0; i < this.numberOfReels; i += 1) {\n      const theReel = this.reels[i].getComponent('Reel');\n      theReel.setAnimation(false);\n      if (i % 2) {\n        theReel.spinDirection = Aux.Direction.Down;\n      } else {\n        theReel.spinDirection = Aux.Direction.Up;\n      }\n      //theReel.toggleAnimation(new Array<number>(-1));\n      theReel.doSpin(0.03 * i);\n    }\n  }\n\n  lock(): void {\n    this.button.getComponent(cc.Button).interactable = false;\n  }\n\n  stop(result: Array<Array<number>> = null, winnerIndexes): void {\n    setTimeout(() => {\n      this.spinning = false;\n      this.button.getComponent(cc.Button).interactable = true;\n      this.button.getChildByName('Label').getComponent(cc.Label).string = 'SPIN';\n    }, 2500);\n\n    const rngMod = Math.random() / 2;\n    for (let i = 0; i < this.numberOfReels; i += 1) {\n      const spinDelay = i < 2 + rngMod ? i / 4 : rngMod * (i - 2) + i / 4;\n      const theReel = this.reels[i].getComponent('Reel');\n      setTimeout(() => {\n        theReel.readyStop(result[i], winnerIndexes);\n      }, spinDelay * 1000);\n    }\n  }\n}\n"]}